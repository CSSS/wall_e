node {
    stage('Cleanup PR') {
        // Trigger: GitHub webhook whenever a Pull Request Event occurs
        // Actions:
        // PR to master (Re)opened: Stop branch containers
        // PR to master Closed without Merge: Restart branch containers
        // PR to any branch Closed: Delete PR's channels and containers

        withCredentials([string(credentialsId: 'DISCORD_DEV_TOKEN', variable: 'TOKEN')]) {
            def object = readJSON text: "${payload}"
            def pr_number = object.number
            def branch_name = object.pull_request.head.ref
            def destination_branch_name = object.pull_request.base.ref
            def merged = object.pull_request.merged
            def action = object.action
            sh "rm -fr wall_e || true"
            sh "mkdir wall_e"
            sh "cd wall_e"
            sh "git init"
            sh "git remote add origin https://github.com/CSSS/wall_e.git"
            sh "git fetch --depth 1 origin"
            sh "git checkout master"
            sh "./CI/server_scripts/clean_pr/clear_pr_env.sh \"${pr_number}\" \"${branch_name}\" \"${destination_branch_name}\" \"${merged}\" \"${action}\" \"${TOKEN}\""
            sh "cd ../"
            sh "rm -fr wall_e"
        }
    }
}
