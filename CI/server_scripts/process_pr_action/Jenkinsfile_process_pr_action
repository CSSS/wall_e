node {
    stage('Cleanup PR') {
        // Trigger: GitHub webhook whenever a Pull Request Event occurs
        // Actions:
        // PR to master (Re)opened: Stop branch containers
        // PR to master Closed without Merge: Restart branch containers
        // PR to any branch Closed: Delete PR's channels and containers

        withCredentials(
          [
            string(credentialsId: 'WALL_E_STAGING_DISCORD_BOT_TOKEN', variable: 'token'),
            string(credentialsId: 'WOLFRAM_API_TOKEN', variable: 'worlfram_api_token'),
            string(credentialsId: 'MEE6_AUTHORIZATION', variable: 'mee6_authorization')
          ]
        ) {
            def object = readJSON text: "${payload}"
            def pr_number = object.number
            def branch_name = object.pull_request.head.ref
            def destination_branch_name = object.pull_request.base.ref
            def merged = object.pull_request.merged
            def action = object.action
            sh label: '', script: """bash -c \'
              rm -fr wall_e || true;
              mkdir wall_e;
              cd wall_e;
              git init;
              git remote add origin https://github.com/CSSS/wall_e.git;
              git fetch --depth 1 origin;
              git checkout master;
              ./CI/server_scripts/process_pr_action/process_pr_action.sh \"${pr_number}\" \"${branch_name}\" \"${destination_branch_name}\" \"${merged}\" \"${action}\" \"${token}\" \"{worlfram_api_token}\" \"{mee6_authorization}\";
              cd ../;
              rm -fr wall_e;
              \'"""
        }
    }
}
