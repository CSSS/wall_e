version: '3' #docker-compose version
services:  #Services that are needed for the wall_e app
    wall_e: #the wall_e app, the name will of the image will be ${COMPOSE_PROJECT_NAME}_wall_e
        build:
            context: ../../../ #Saying that all of my source files are at the root path
            dockerfile: CI/server_scripts/build_wall_e/Dockerfile.wall_e
            args:
              - ORIGIN_IMAGE
        environment:
            - TOKEN
            - BOT_LOG_CHANNEL
            - BOT_GENERAL_CHANNEL
            - BRANCH_NAME
            - ENVIRONMENT
            - COMPOSE_PROJECT_NAME
            - WOLFRAM_API_TOKEN
            - POSTGRES_DB_USER
            - POSTGRES_DB_DBNAME
            - POSTGRES_PASSWORD
            - WALL_E_DB_USER
            - WALL_E_DB_DBNAME
            - WALL_E_DB_PASSWORD
            - MEE6_AUTHORIZATION
        volumes: #volume are for hot reload
            - logs:/usr/src/app/logs
        depends_on:   # used to ensure that docker wont start wall_e until after it has started the database container
            - "db"
        container_name: "${COMPOSE_PROJECT_NAME}_wall_e"
    db: #declaration of the postgres container
        environment:
            - POSTGRES_PASSWORD
        image: postgres:alpine #using postgres image
        container_name: "${COMPOSE_PROJECT_NAME}_wall_e_db"
    wall_e_web: #declaration of the web container
        build:
            context: ../../../ #Saying that all of my source files are at the root path
            dockerfile: CI/server_scripts/build_wall_e/Dockerfile.web
        environment:
            - TOKEN
            - BRANCH_NAME
            - ENVIRONMENT
            - COMPOSE_PROJECT_NAME
            - WALL_E_DB_USER
            - WALL_E_DB_DBNAME
            - WALL_E_DB_PASSWORD
        depends_on: # used to ensure that docker wont start web until after it has started the database container
            - "db"
        container_name: "${COMPOSE_PROJECT_NAME}_wall_e_web"
volumes:
    logs:
        external:
            name: "${COMPOSE_PROJECT_NAME}_logs"
