version: '3' #docker-compose version
services:  #Services that are needed for the wall_e app
    wall_e: #the wall_e app, the name will of the image will be ${COMPOSE_PROJECT_NAME}_wall_e
        build:
            context: ../../../../ #Saying that all of my source files are at the root path
            dockerfile: CI/validate_and_deploy/2_deploy/server_scripts/Dockerfile.wall_e
            args:
              - ORIGIN_IMAGE
        environment:
            - basic_config__TOKEN
            - BOT_LOG_CHANNEL
            - BOT_GENERAL_CHANNEL
            - basic_config__BRANCH_NAME
            - basic_config__ENVIRONMENT
            - basic_config__COMPOSE_PROJECT_NAME
            - basic_config__WOLFRAM_API_TOKEN
            - POSTGRES_DB_USER
            - POSTGRES_DB_DBNAME
            - POSTGRES_PASSWORD
            - database_config__WALL_E_DB_USER
            - database_config__WALL_E_DB_DBNAME
            - database_config__WALL_E_DB_PASSWORD
            - basic_config__MEE6_AUTHORIZATION
            - github__TOKEN
        depends_on:   # used to ensure that docker wont start wall_e until after it has started the database container
            - "db"
        image: "${compose_project_name}_wall_e"
        container_name: "${COMPOSE_PROJECT_NAME}_wall_e"
        networks:
            - wall_e_network
    db: #declaration of the postgres container
        environment:
            - POSTGRES_PASSWORD
        image: postgres:alpine #using postgres image
        container_name: "${COMPOSE_PROJECT_NAME}_wall_e_db"
        networks:
            - wall_e_network

networks:
  wall_e_network: